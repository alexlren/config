#! /bin/sh

XCONFIG_ROOT=$(readlink -f $0)
XCONFIG_ROOT=$(dirname "$XCONFIG_ROOT")
XCONFIG_RESOURCES="$XCONFIG_ROOT/resources"

usage()
{
    echo "Usage: xconfig COMMAND"
    echo "Install a configuration directory in your HOME."
    echo
    echo -e "  help"
    echo -e "\tDisplay this help"
    echo -e "  list"
    echo -e "\tList configurations"
    echo -e "  install CONFIG"
    echo -e "\tCopy the required configuration CONFIG in your HOME"
    echo -e "  uninstall CONFIG"
    echo -e "\tRemove the required configuration CONFIG from your HOME"
}

list_config()
{
    echo "Configuration:"
    for r in ${XCONFIG_RESOURCES}/*
    do
        echo "* $(basename $r)"
    done
}

install_config()
{
    CONFIG=$1
    if [ ! -d "$XCONFIG_RESOURCES/$CONFIG" ]
    then
        echo "No such configuration $CONFIG"
        return 1
    fi
	# Pre install hook
    if [ -f "$XCONFIG_RESOURCES/$CONFIG/hooks/pre-install.sh" ]
    then
        sh -x "$XCONFIG_RESOURCES/$CONFIG/hooks/pre-install.sh"
    fi
	# Install shared config
	for conf in $(find "$XCONFIG_RESOURCES/$CONFIG/share" -maxdepth 1 -mindepth 1 2>/dev/null)
	do
		c=$(basename $conf)
		# Override existing config anyway
		rm -rf "$HOME/$c"
		ln -s "$XCONFIG_RESOURCES/$CONFIG/share/$c" "$HOME/$c"
	done
	# Install local config
	for conf in $(find "$XCONFIG_RESOURCES/$CONFIG/local" -maxdepth 1 -mindepth 1 2>/dev/null)
	do
		c=$(basename $conf)
		# Remove old config?
        if [ -e "$HOME/$c" ]
        then
            echo -n "Override $HOME/$c ? [y/N] "
            read ANSWER
            if [ "$ANSWER" != "y" ]
            then
                continue
            fi
        fi
		rm -f "$HOME/$c"
		cp -r "$XCONFIG_RESOURCES/$CONFIG/local/$c" "$HOME/$c"
	done
    if [ -f "$XCONFIG_RESOURCES/$CONFIG/hooks/post-install.sh" ]
    then
        sh -x "$XCONFIG_RESOURCES/$CONFIG/hooks/post-install.sh"
    fi
}

uninstall_config()
{
    CONFIG=$1
    if [ ! -d "$XCONFIG_RESOURCES/$CONFIG" ]
    then
        echo "No such configuration $CONFIG"
		echo "Remove the configuration files manually"
        return 1
    fi
	for conf in $(find "$XCONFIG_RESOURCES/$CONFIG/share" "$XCONFIG_RESOURCES/$CONFIG/local" -maxdepth 1 -mindepth 1 2>/dev/null)
	do
		c=$(basename $conf)
        rm -rf "$HOME/$c"
	done
}

if [ $# -eq 0 ]
then
    usage
    exit 1
fi

RET=0
case $1 in
    "help")
        usage
        ;;
    "list")
        list_config
        ;;
    "install")
        if [ $# -lt 2 ]
        then
            usage
            exit 1
        fi
		shift
		for c in $*
		do
			install_config "$c"
		done
        RET=$?
        ;;
    "uninstall")
        if [ $# -lt 2 ]
        then
            usage
            exit 1
        fi
		shift
		for c in $*
		do
			uninstall_config "$c"
		done
        RET=$?
        ;;
    *)
        echo "Command not found: $1" 1>&2
        usage
        exit 1
        ;;
esac
exit $RET
